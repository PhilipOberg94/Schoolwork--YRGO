
HW-lektion10.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000b5e  00000bf2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b5e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800108  00800108  00000bfa  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000bfa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c58  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000068  00000000  00000000  00000c98  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000c3d  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007d9  00000000  00000000  0000193d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000051f  00000000  00000000  00002116  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000144  00000000  00000000  00002638  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000043e  00000000  00000000  0000277c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000522  00000000  00000000  00002bba  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000058  00000000  00000000  000030dc  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 18 01 	jmp	0x230	; 0x230 <__vector_4>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e5       	ldi	r30, 0x5E	; 94
  7c:	fb e0       	ldi	r31, 0x0B	; 11
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a8 30       	cpi	r26, 0x08	; 8
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a8 e0       	ldi	r26, 0x08	; 8
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 30       	cpi	r26, 0x0E	; 14
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 05 01 	call	0x20a	; 0x20a <main>
  9e:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <lcdCOmmand>:
bool sw3 (){
    if (PINB & (1<<BUTTON3)) {
        return false;
    }
    else return true;
}
  a6:	8b b9       	out	0x0b, r24	; 11
  a8:	85 b1       	in	r24, 0x05	; 5
  aa:	8e 7f       	andi	r24, 0xFE	; 254
  ac:	85 b9       	out	0x05, r24	; 5
  ae:	85 b1       	in	r24, 0x05	; 5
  b0:	8d 7f       	andi	r24, 0xFD	; 253
  b2:	85 b9       	out	0x05, r24	; 5
  b4:	85 b1       	in	r24, 0x05	; 5
  b6:	84 60       	ori	r24, 0x04	; 4
  b8:	85 b9       	out	0x05, r24	; 5
  ba:	83 e0       	ldi	r24, 0x03	; 3
  bc:	8a 95       	dec	r24
  be:	f1 f7       	brne	.-4      	; 0xbc <lcdCOmmand+0x16>
  c0:	00 00       	nop
  c2:	85 b1       	in	r24, 0x05	; 5
  c4:	8b 7f       	andi	r24, 0xFB	; 251
  c6:	85 b9       	out	0x05, r24	; 5
  c8:	8d ee       	ldi	r24, 0xED	; 237
  ca:	92 e0       	ldi	r25, 0x02	; 2
  cc:	01 97       	sbiw	r24, 0x01	; 1
  ce:	f1 f7       	brne	.-4      	; 0xcc <lcdCOmmand+0x26>
  d0:	00 c0       	rjmp	.+0      	; 0xd2 <lcdCOmmand+0x2c>
  d2:	00 00       	nop
  d4:	08 95       	ret

000000d6 <lcdData>:
  d6:	8b b9       	out	0x0b, r24	; 11
  d8:	85 b1       	in	r24, 0x05	; 5
  da:	81 60       	ori	r24, 0x01	; 1
  dc:	85 b9       	out	0x05, r24	; 5
  de:	85 b1       	in	r24, 0x05	; 5
  e0:	8d 7f       	andi	r24, 0xFD	; 253
  e2:	85 b9       	out	0x05, r24	; 5
  e4:	85 b1       	in	r24, 0x05	; 5
  e6:	84 60       	ori	r24, 0x04	; 4
  e8:	85 b9       	out	0x05, r24	; 5
  ea:	83 e0       	ldi	r24, 0x03	; 3
  ec:	8a 95       	dec	r24
  ee:	f1 f7       	brne	.-4      	; 0xec <lcdData+0x16>
  f0:	00 00       	nop
  f2:	85 b1       	in	r24, 0x05	; 5
  f4:	8b 7f       	andi	r24, 0xFB	; 251
  f6:	85 b9       	out	0x05, r24	; 5
  f8:	8d ee       	ldi	r24, 0xED	; 237
  fa:	92 e0       	ldi	r25, 0x02	; 2
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <lcdData+0x26>
 100:	00 c0       	rjmp	.+0      	; 0x102 <lcdData+0x2c>
 102:	00 00       	nop
 104:	08 95       	ret

00000106 <lcd_init>:


void lcd_init() {
 106:	cf 93       	push	r28
    LCD_DDRD = 0xFF;
 108:	cf ef       	ldi	r28, 0xFF	; 255
 10a:	ca b9       	out	0x0a, r28	; 10
    LCD_CDDR = 0b00000111;
 10c:	87 e0       	ldi	r24, 0x07	; 7
 10e:	84 b9       	out	0x04, r24	; 4
    PORTB = 0b00111000;
 110:	88 e3       	ldi	r24, 0x38	; 56
 112:	85 b9       	out	0x05, r24	; 5
    
    LCD_CPRT &=~(1<<LCD_EN);
 114:	85 b1       	in	r24, 0x05	; 5
 116:	8b 7f       	andi	r24, 0xFB	; 251
 118:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 11a:	83 ef       	ldi	r24, 0xF3	; 243
 11c:	91 e0       	ldi	r25, 0x01	; 1
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <lcd_init+0x18>
 122:	00 c0       	rjmp	.+0      	; 0x124 <lcd_init+0x1e>
 124:	00 00       	nop
    _delay_us(2000);
    lcdCOmmand(0x38);
 126:	88 e3       	ldi	r24, 0x38	; 56
 128:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
    lcdCOmmand(0x0E);
 12c:	8e e0       	ldi	r24, 0x0E	; 14
 12e:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
    lcdCOmmand(0x01);
 132:	81 e0       	ldi	r24, 0x01	; 1
 134:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
 138:	83 ef       	ldi	r24, 0xF3	; 243
 13a:	91 e0       	ldi	r25, 0x01	; 1
 13c:	01 97       	sbiw	r24, 0x01	; 1
 13e:	f1 f7       	brne	.-4      	; 0x13c <lcd_init+0x36>
 140:	00 c0       	rjmp	.+0      	; 0x142 <lcd_init+0x3c>
 142:	00 00       	nop
    _delay_us(2000);
    lcdCOmmand(0x06);
 144:	86 e0       	ldi	r24, 0x06	; 6
 146:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
    
    DDRC = 0xFF;							// Port C all output. PC0: RW		PC1: RS		PC2: E
 14a:	c7 b9       	out	0x07, r28	; 7
    DDRC &= ~(1<<DDC5);						// Set Pin C5 as input to read Echo
 14c:	87 b1       	in	r24, 0x07	; 7
 14e:	8f 7d       	andi	r24, 0xDF	; 223
 150:	87 b9       	out	0x07, r24	; 7
    PORTC |= (1<<PORTC5);					// Enable pull up on C5
 152:	88 b1       	in	r24, 0x08	; 8
 154:	80 62       	ori	r24, 0x20	; 32
 156:	88 b9       	out	0x08, r24	; 8
    PORTC &= ~(1<<PC4);						// Init C4 as low (trigger)
 158:	88 b1       	in	r24, 0x08	; 8
 15a:	8f 7e       	andi	r24, 0xEF	; 239
 15c:	88 b9       	out	0x08, r24	; 8

    PRR &= ~(1<<PRTIM1);					// To activate timer1 module
 15e:	e4 e6       	ldi	r30, 0x64	; 100
 160:	f0 e0       	ldi	r31, 0x00	; 0
 162:	80 81       	ld	r24, Z
 164:	87 7f       	andi	r24, 0xF7	; 247
 166:	80 83       	st	Z, r24
    TCNT1 = 0;								// Initial timer value
 168:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 16c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
    TCCR1B |= (1<<CS10);					// Timer without prescaller. Since default clock for atmega328p is 1Mhz period is 1uS
 170:	e1 e8       	ldi	r30, 0x81	; 129
 172:	f0 e0       	ldi	r31, 0x00	; 0
 174:	80 81       	ld	r24, Z
 176:	81 60       	ori	r24, 0x01	; 1
 178:	80 83       	st	Z, r24
    TCCR1B |= (1<<ICES1);					// First capture on rising edge
 17a:	80 81       	ld	r24, Z
 17c:	80 64       	ori	r24, 0x40	; 64
 17e:	80 83       	st	Z, r24

    PCICR = (1<<PCIE1);						// Enable PCINT[14:8] we use pin C5 which is PCINT13
 180:	82 e0       	ldi	r24, 0x02	; 2
 182:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7f8068>
    PCMSK1 = (1<<PCINT13);					// Enable C5 interrupt
 186:	80 e2       	ldi	r24, 0x20	; 32
 188:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7f806c>
    sei();
 18c:	78 94       	sei
}
 18e:	cf 91       	pop	r28
 190:	08 95       	ret

00000192 <lcd_gotoxy>:

void lcd_gotoxy(unsigned char x, unsigned char y) {
 192:	cf 93       	push	r28
 194:	df 93       	push	r29
 196:	00 d0       	rcall	.+0      	; 0x198 <lcd_gotoxy+0x6>
 198:	00 d0       	rcall	.+0      	; 0x19a <lcd_gotoxy+0x8>
 19a:	cd b7       	in	r28, 0x3d	; 61
 19c:	de b7       	in	r29, 0x3e	; 62
    unsigned char firstCharAdr[] = {0x80,0xC0,0x94,0xD4};
 19e:	90 e8       	ldi	r25, 0x80	; 128
 1a0:	99 83       	std	Y+1, r25	; 0x01
 1a2:	90 ec       	ldi	r25, 0xC0	; 192
 1a4:	9a 83       	std	Y+2, r25	; 0x02
 1a6:	94 e9       	ldi	r25, 0x94	; 148
 1a8:	9b 83       	std	Y+3, r25	; 0x03
 1aa:	94 ed       	ldi	r25, 0xD4	; 212
 1ac:	9c 83       	std	Y+4, r25	; 0x04
    lcdCOmmand(firstCharAdr[y-1]+x-1);
 1ae:	e6 2f       	mov	r30, r22
 1b0:	f0 e0       	ldi	r31, 0x00	; 0
 1b2:	31 97       	sbiw	r30, 0x01	; 1
 1b4:	21 e0       	ldi	r18, 0x01	; 1
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	2c 0f       	add	r18, r28
 1ba:	3d 1f       	adc	r19, r29
 1bc:	e2 0f       	add	r30, r18
 1be:	f3 1f       	adc	r31, r19
 1c0:	90 81       	ld	r25, Z
 1c2:	89 0f       	add	r24, r25
 1c4:	81 50       	subi	r24, 0x01	; 1
 1c6:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ca:	89 ef       	ldi	r24, 0xF9	; 249
 1cc:	90 e0       	ldi	r25, 0x00	; 0
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <lcd_gotoxy+0x3c>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <lcd_gotoxy+0x42>
 1d4:	00 00       	nop
    _delay_ms(1);
}
 1d6:	0f 90       	pop	r0
 1d8:	0f 90       	pop	r0
 1da:	0f 90       	pop	r0
 1dc:	0f 90       	pop	r0
 1de:	df 91       	pop	r29
 1e0:	cf 91       	pop	r28
 1e2:	08 95       	ret

000001e4 <lcd_print>:

void lcd_print(char * str) {
 1e4:	0f 93       	push	r16
 1e6:	1f 93       	push	r17
 1e8:	cf 93       	push	r28
 1ea:	8c 01       	movw	r16, r24
    unsigned char i = 0;
 1ec:	c0 e0       	ldi	r28, 0x00	; 0
    
    while(str[i] != 0) {
 1ee:	03 c0       	rjmp	.+6      	; 0x1f6 <lcd_print+0x12>
        lcdData(str[i]);
 1f0:	0e 94 6b 00 	call	0xd6	; 0xd6 <lcdData>
        i++;
 1f4:	cf 5f       	subi	r28, 0xFF	; 255
}

void lcd_print(char * str) {
    unsigned char i = 0;
    
    while(str[i] != 0) {
 1f6:	f8 01       	movw	r30, r16
 1f8:	ec 0f       	add	r30, r28
 1fa:	f1 1d       	adc	r31, r1
 1fc:	80 81       	ld	r24, Z
 1fe:	81 11       	cpse	r24, r1
 200:	f7 cf       	rjmp	.-18     	; 0x1f0 <lcd_print+0xc>
        lcdData(str[i]);
        i++;
    }
}
 202:	cf 91       	pop	r28
 204:	1f 91       	pop	r17
 206:	0f 91       	pop	r16
 208:	08 95       	ret

0000020a <main>:
int main(void)
{
    lcd_init();
 20a:	0e 94 83 00 	call	0x106	; 0x106 <lcd_init>
 20e:	87 e9       	ldi	r24, 0x97	; 151
 210:	9a e3       	ldi	r25, 0x3A	; 58
 212:	01 97       	sbiw	r24, 0x01	; 1
 214:	f1 f7       	brne	.-4      	; 0x212 <main+0x8>
 216:	00 c0       	rjmp	.+0      	; 0x218 <main+0xe>
 218:	00 00       	nop
    while(1){
        
        
        _delay_ms(60); 							// To allow sufficient time between queries (60ms min)

        PORTC |= (1<<PC4);						// Set trigger high
 21a:	88 b1       	in	r24, 0x08	; 8
 21c:	80 61       	ori	r24, 0x10	; 16
 21e:	88 b9       	out	0x08, r24	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 220:	93 e0       	ldi	r25, 0x03	; 3
 222:	9a 95       	dec	r25
 224:	f1 f7       	brne	.-4      	; 0x222 <main+0x18>
 226:	00 00       	nop
        _delay_us(10);							// for 10uS
        PORTC &= ~(1<<PC4);						// to trigger the ultrasonic module
 228:	88 b1       	in	r24, 0x08	; 8
 22a:	8f 7e       	andi	r24, 0xEF	; 239
 22c:	88 b9       	out	0x08, r24	; 8
 22e:	ef cf       	rjmp	.-34     	; 0x20e <main+0x4>

00000230 <__vector_4>:
    }
}
/*******************************************INTURRUPT PCINT1 FOR PIN C5*******************************************/
char result [6];

ISR(PCINT1_vect) {
 230:	1f 92       	push	r1
 232:	0f 92       	push	r0
 234:	0f b6       	in	r0, 0x3f	; 63
 236:	0f 92       	push	r0
 238:	11 24       	eor	r1, r1
 23a:	ff 92       	push	r15
 23c:	0f 93       	push	r16
 23e:	1f 93       	push	r17
 240:	2f 93       	push	r18
 242:	3f 93       	push	r19
 244:	4f 93       	push	r20
 246:	5f 93       	push	r21
 248:	6f 93       	push	r22
 24a:	7f 93       	push	r23
 24c:	8f 93       	push	r24
 24e:	9f 93       	push	r25
 250:	af 93       	push	r26
 252:	bf 93       	push	r27
 254:	ef 93       	push	r30
 256:	ff 93       	push	r31
 258:	cf 93       	push	r28
 25a:	df 93       	push	r29
 25c:	cd b7       	in	r28, 0x3d	; 61
 25e:	de b7       	in	r29, 0x3e	; 62
 260:	26 97       	sbiw	r28, 0x06	; 6
 262:	de bf       	out	0x3e, r29	; 62
 264:	cd bf       	out	0x3d, r28	; 61
    if (bit_is_set(PINC,PC5)) {					// Checks if echo is high
 266:	35 9b       	sbis	0x06, 5	; 6
 268:	08 c0       	rjmp	.+16     	; 0x27a <__vector_4+0x4a>
        TCNT1 = 0;								// Reset Timer
 26a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 26e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
        PORTC |= (1<<PC3);
 272:	88 b1       	in	r24, 0x08	; 8
 274:	88 60       	ori	r24, 0x08	; 8
 276:	88 b9       	out	0x08, r24	; 8
 278:	5f c0       	rjmp	.+190    	; 0x338 <__vector_4+0x108>
        } else {
        uint32_t numuS = TCNT1;					// Save Timer value
 27a:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
 27e:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
 282:	80 e0       	ldi	r24, 0x00	; 0
 284:	90 e0       	ldi	r25, 0x00	; 0
        uint16_t oldSREG = SREG;
 286:	ff b6       	in	r15, 0x3f	; 63
       
        char temp [6];
        sprintf(temp, "%d",(int) roundf (numuS/58));
 288:	2a e3       	ldi	r18, 0x3A	; 58
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	50 e0       	ldi	r21, 0x00	; 0
 290:	0e 94 a1 02 	call	0x542	; 0x542 <__udivmodsi4>
 294:	ca 01       	movw	r24, r20
 296:	b9 01       	movw	r22, r18
 298:	0e 94 ee 01 	call	0x3dc	; 0x3dc <__floatunsisf>
 29c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <round>
 2a0:	0e 94 b8 01 	call	0x370	; 0x370 <__fixsfsi>
 2a4:	7f 93       	push	r23
 2a6:	6f 93       	push	r22
 2a8:	80 e0       	ldi	r24, 0x00	; 0
 2aa:	91 e0       	ldi	r25, 0x01	; 1
 2ac:	9f 93       	push	r25
 2ae:	8f 93       	push	r24
 2b0:	ce 01       	movw	r24, r28
 2b2:	01 96       	adiw	r24, 0x01	; 1
 2b4:	9f 93       	push	r25
 2b6:	8f 93       	push	r24
 2b8:	0e 94 c3 02 	call	0x586	; 0x586 <sprintf>
        
        for (int i = 0; i < sizeof(temp);i++) {
 2bc:	0f 90       	pop	r0
 2be:	0f 90       	pop	r0
 2c0:	0f 90       	pop	r0
 2c2:	0f 90       	pop	r0
 2c4:	0f 90       	pop	r0
 2c6:	0f 90       	pop	r0
 2c8:	00 e0       	ldi	r16, 0x00	; 0
 2ca:	10 e0       	ldi	r17, 0x00	; 0
 2cc:	1d c0       	rjmp	.+58     	; 0x308 <__vector_4+0xd8>
            if (result[i] != temp[i]) {
 2ce:	f8 01       	movw	r30, r16
 2d0:	e8 5f       	subi	r30, 0xF8	; 248
 2d2:	fe 4f       	sbci	r31, 0xFE	; 254
 2d4:	90 81       	ld	r25, Z
 2d6:	e1 e0       	ldi	r30, 0x01	; 1
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	ec 0f       	add	r30, r28
 2dc:	fd 1f       	adc	r31, r29
 2de:	e0 0f       	add	r30, r16
 2e0:	f1 1f       	adc	r31, r17
 2e2:	80 81       	ld	r24, Z
 2e4:	98 17       	cp	r25, r24
 2e6:	19 f0       	breq	.+6      	; 0x2ee <__vector_4+0xbe>
                
        lcdCOmmand(1);
 2e8:	81 e0       	ldi	r24, 0x01	; 1
 2ea:	0e 94 53 00 	call	0xa6	; 0xa6 <lcdCOmmand>
            }
            result [i] = temp [i];
 2ee:	e1 e0       	ldi	r30, 0x01	; 1
 2f0:	f0 e0       	ldi	r31, 0x00	; 0
 2f2:	ec 0f       	add	r30, r28
 2f4:	fd 1f       	adc	r31, r29
 2f6:	e0 0f       	add	r30, r16
 2f8:	f1 1f       	adc	r31, r17
 2fa:	80 81       	ld	r24, Z
 2fc:	f8 01       	movw	r30, r16
 2fe:	e8 5f       	subi	r30, 0xF8	; 248
 300:	fe 4f       	sbci	r31, 0xFE	; 254
 302:	80 83       	st	Z, r24
        uint16_t oldSREG = SREG;
       
        char temp [6];
        sprintf(temp, "%d",(int) roundf (numuS/58));
        
        for (int i = 0; i < sizeof(temp);i++) {
 304:	0f 5f       	subi	r16, 0xFF	; 255
 306:	1f 4f       	sbci	r17, 0xFF	; 255
 308:	06 30       	cpi	r16, 0x06	; 6
 30a:	11 05       	cpc	r17, r1
 30c:	00 f3       	brcs	.-64     	; 0x2ce <__vector_4+0x9e>
        lcdCOmmand(1);
            }
            result [i] = temp [i];
        }
        
         lcd_gotoxy(1,1);
 30e:	61 e0       	ldi	r22, 0x01	; 1
 310:	81 e0       	ldi	r24, 0x01	; 1
 312:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_gotoxy>
        lcd_print("CM: ");
 316:	83 e0       	ldi	r24, 0x03	; 3
 318:	91 e0       	ldi	r25, 0x01	; 1
 31a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_print>
         lcd_gotoxy(5,1);
 31e:	61 e0       	ldi	r22, 0x01	; 1
 320:	85 e0       	ldi	r24, 0x05	; 5
 322:	0e 94 c9 00 	call	0x192	; 0x192 <lcd_gotoxy>
        lcd_print(result);
 326:	88 e0       	ldi	r24, 0x08	; 8
 328:	91 e0       	ldi	r25, 0x01	; 1
 32a:	0e 94 f2 00 	call	0x1e4	; 0x1e4 <lcd_print>
 32e:	83 e5       	ldi	r24, 0x53	; 83
 330:	8a 95       	dec	r24
 332:	f1 f7       	brne	.-4      	; 0x330 <__vector_4+0x100>
 334:	00 00       	nop
        _delay_us(250);
        SREG = oldSREG;
 336:	ff be       	out	0x3f, r15	; 63
						// Enable interrupts
    }
 338:	26 96       	adiw	r28, 0x06	; 6
 33a:	0f b6       	in	r0, 0x3f	; 63
 33c:	f8 94       	cli
 33e:	de bf       	out	0x3e, r29	; 62
 340:	0f be       	out	0x3f, r0	; 63
 342:	cd bf       	out	0x3d, r28	; 61
 344:	df 91       	pop	r29
 346:	cf 91       	pop	r28
 348:	ff 91       	pop	r31
 34a:	ef 91       	pop	r30
 34c:	bf 91       	pop	r27
 34e:	af 91       	pop	r26
 350:	9f 91       	pop	r25
 352:	8f 91       	pop	r24
 354:	7f 91       	pop	r23
 356:	6f 91       	pop	r22
 358:	5f 91       	pop	r21
 35a:	4f 91       	pop	r20
 35c:	3f 91       	pop	r19
 35e:	2f 91       	pop	r18
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	0f 90       	pop	r0
 368:	0f be       	out	0x3f, r0	; 63
 36a:	0f 90       	pop	r0
 36c:	1f 90       	pop	r1
 36e:	18 95       	reti

00000370 <__fixsfsi>:
 370:	0e 94 bf 01 	call	0x37e	; 0x37e <__fixunssfsi>
 374:	68 94       	set
 376:	b1 11       	cpse	r27, r1
 378:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>
 37c:	08 95       	ret

0000037e <__fixunssfsi>:
 37e:	0e 94 33 02 	call	0x466	; 0x466 <__fp_splitA>
 382:	88 f0       	brcs	.+34     	; 0x3a6 <__fixunssfsi+0x28>
 384:	9f 57       	subi	r25, 0x7F	; 127
 386:	98 f0       	brcs	.+38     	; 0x3ae <__fixunssfsi+0x30>
 388:	b9 2f       	mov	r27, r25
 38a:	99 27       	eor	r25, r25
 38c:	b7 51       	subi	r27, 0x17	; 23
 38e:	b0 f0       	brcs	.+44     	; 0x3bc <__fixunssfsi+0x3e>
 390:	e1 f0       	breq	.+56     	; 0x3ca <__fixunssfsi+0x4c>
 392:	66 0f       	add	r22, r22
 394:	77 1f       	adc	r23, r23
 396:	88 1f       	adc	r24, r24
 398:	99 1f       	adc	r25, r25
 39a:	1a f0       	brmi	.+6      	; 0x3a2 <__fixunssfsi+0x24>
 39c:	ba 95       	dec	r27
 39e:	c9 f7       	brne	.-14     	; 0x392 <__fixunssfsi+0x14>
 3a0:	14 c0       	rjmp	.+40     	; 0x3ca <__fixunssfsi+0x4c>
 3a2:	b1 30       	cpi	r27, 0x01	; 1
 3a4:	91 f0       	breq	.+36     	; 0x3ca <__fixunssfsi+0x4c>
 3a6:	0e 94 4d 02 	call	0x49a	; 0x49a <__fp_zero>
 3aa:	b1 e0       	ldi	r27, 0x01	; 1
 3ac:	08 95       	ret
 3ae:	0c 94 4d 02 	jmp	0x49a	; 0x49a <__fp_zero>
 3b2:	67 2f       	mov	r22, r23
 3b4:	78 2f       	mov	r23, r24
 3b6:	88 27       	eor	r24, r24
 3b8:	b8 5f       	subi	r27, 0xF8	; 248
 3ba:	39 f0       	breq	.+14     	; 0x3ca <__fixunssfsi+0x4c>
 3bc:	b9 3f       	cpi	r27, 0xF9	; 249
 3be:	cc f3       	brlt	.-14     	; 0x3b2 <__fixunssfsi+0x34>
 3c0:	86 95       	lsr	r24
 3c2:	77 95       	ror	r23
 3c4:	67 95       	ror	r22
 3c6:	b3 95       	inc	r27
 3c8:	d9 f7       	brne	.-10     	; 0x3c0 <__fixunssfsi+0x42>
 3ca:	3e f4       	brtc	.+14     	; 0x3da <__fixunssfsi+0x5c>
 3cc:	90 95       	com	r25
 3ce:	80 95       	com	r24
 3d0:	70 95       	com	r23
 3d2:	61 95       	neg	r22
 3d4:	7f 4f       	sbci	r23, 0xFF	; 255
 3d6:	8f 4f       	sbci	r24, 0xFF	; 255
 3d8:	9f 4f       	sbci	r25, 0xFF	; 255
 3da:	08 95       	ret

000003dc <__floatunsisf>:
 3dc:	e8 94       	clt
 3de:	09 c0       	rjmp	.+18     	; 0x3f2 <__floatsisf+0x12>

000003e0 <__floatsisf>:
 3e0:	97 fb       	bst	r25, 7
 3e2:	3e f4       	brtc	.+14     	; 0x3f2 <__floatsisf+0x12>
 3e4:	90 95       	com	r25
 3e6:	80 95       	com	r24
 3e8:	70 95       	com	r23
 3ea:	61 95       	neg	r22
 3ec:	7f 4f       	sbci	r23, 0xFF	; 255
 3ee:	8f 4f       	sbci	r24, 0xFF	; 255
 3f0:	9f 4f       	sbci	r25, 0xFF	; 255
 3f2:	99 23       	and	r25, r25
 3f4:	a9 f0       	breq	.+42     	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
 3f6:	f9 2f       	mov	r31, r25
 3f8:	96 e9       	ldi	r25, 0x96	; 150
 3fa:	bb 27       	eor	r27, r27
 3fc:	93 95       	inc	r25
 3fe:	f6 95       	lsr	r31
 400:	87 95       	ror	r24
 402:	77 95       	ror	r23
 404:	67 95       	ror	r22
 406:	b7 95       	ror	r27
 408:	f1 11       	cpse	r31, r1
 40a:	f8 cf       	rjmp	.-16     	; 0x3fc <__floatsisf+0x1c>
 40c:	fa f4       	brpl	.+62     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 40e:	bb 0f       	add	r27, r27
 410:	11 f4       	brne	.+4      	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 412:	60 ff       	sbrs	r22, 0
 414:	1b c0       	rjmp	.+54     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 416:	6f 5f       	subi	r22, 0xFF	; 255
 418:	7f 4f       	sbci	r23, 0xFF	; 255
 41a:	8f 4f       	sbci	r24, 0xFF	; 255
 41c:	9f 4f       	sbci	r25, 0xFF	; 255
 41e:	16 c0       	rjmp	.+44     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 420:	88 23       	and	r24, r24
 422:	11 f0       	breq	.+4      	; 0x428 <__EEPROM_REGION_LENGTH__+0x28>
 424:	96 e9       	ldi	r25, 0x96	; 150
 426:	11 c0       	rjmp	.+34     	; 0x44a <__EEPROM_REGION_LENGTH__+0x4a>
 428:	77 23       	and	r23, r23
 42a:	21 f0       	breq	.+8      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
 42c:	9e e8       	ldi	r25, 0x8E	; 142
 42e:	87 2f       	mov	r24, r23
 430:	76 2f       	mov	r23, r22
 432:	05 c0       	rjmp	.+10     	; 0x43e <__EEPROM_REGION_LENGTH__+0x3e>
 434:	66 23       	and	r22, r22
 436:	71 f0       	breq	.+28     	; 0x454 <__EEPROM_REGION_LENGTH__+0x54>
 438:	96 e8       	ldi	r25, 0x86	; 134
 43a:	86 2f       	mov	r24, r22
 43c:	70 e0       	ldi	r23, 0x00	; 0
 43e:	60 e0       	ldi	r22, 0x00	; 0
 440:	2a f0       	brmi	.+10     	; 0x44c <__EEPROM_REGION_LENGTH__+0x4c>
 442:	9a 95       	dec	r25
 444:	66 0f       	add	r22, r22
 446:	77 1f       	adc	r23, r23
 448:	88 1f       	adc	r24, r24
 44a:	da f7       	brpl	.-10     	; 0x442 <__EEPROM_REGION_LENGTH__+0x42>
 44c:	88 0f       	add	r24, r24
 44e:	96 95       	lsr	r25
 450:	87 95       	ror	r24
 452:	97 f9       	bld	r25, 7
 454:	08 95       	ret

00000456 <__fp_split3>:
 456:	57 fd       	sbrc	r21, 7
 458:	90 58       	subi	r25, 0x80	; 128
 45a:	44 0f       	add	r20, r20
 45c:	55 1f       	adc	r21, r21
 45e:	59 f0       	breq	.+22     	; 0x476 <__fp_splitA+0x10>
 460:	5f 3f       	cpi	r21, 0xFF	; 255
 462:	71 f0       	breq	.+28     	; 0x480 <__fp_splitA+0x1a>
 464:	47 95       	ror	r20

00000466 <__fp_splitA>:
 466:	88 0f       	add	r24, r24
 468:	97 fb       	bst	r25, 7
 46a:	99 1f       	adc	r25, r25
 46c:	61 f0       	breq	.+24     	; 0x486 <__fp_splitA+0x20>
 46e:	9f 3f       	cpi	r25, 0xFF	; 255
 470:	79 f0       	breq	.+30     	; 0x490 <__fp_splitA+0x2a>
 472:	87 95       	ror	r24
 474:	08 95       	ret
 476:	12 16       	cp	r1, r18
 478:	13 06       	cpc	r1, r19
 47a:	14 06       	cpc	r1, r20
 47c:	55 1f       	adc	r21, r21
 47e:	f2 cf       	rjmp	.-28     	; 0x464 <__fp_split3+0xe>
 480:	46 95       	lsr	r20
 482:	f1 df       	rcall	.-30     	; 0x466 <__fp_splitA>
 484:	08 c0       	rjmp	.+16     	; 0x496 <__fp_splitA+0x30>
 486:	16 16       	cp	r1, r22
 488:	17 06       	cpc	r1, r23
 48a:	18 06       	cpc	r1, r24
 48c:	99 1f       	adc	r25, r25
 48e:	f1 cf       	rjmp	.-30     	; 0x472 <__fp_splitA+0xc>
 490:	86 95       	lsr	r24
 492:	71 05       	cpc	r23, r1
 494:	61 05       	cpc	r22, r1
 496:	08 94       	sec
 498:	08 95       	ret

0000049a <__fp_zero>:
 49a:	e8 94       	clt

0000049c <__fp_szero>:
 49c:	bb 27       	eor	r27, r27
 49e:	66 27       	eor	r22, r22
 4a0:	77 27       	eor	r23, r23
 4a2:	cb 01       	movw	r24, r22
 4a4:	97 f9       	bld	r25, 7
 4a6:	08 95       	ret

000004a8 <round>:
 4a8:	0e 94 33 02 	call	0x466	; 0x466 <__fp_splitA>
 4ac:	e8 f0       	brcs	.+58     	; 0x4e8 <round+0x40>
 4ae:	9e 37       	cpi	r25, 0x7E	; 126
 4b0:	e8 f0       	brcs	.+58     	; 0x4ec <round+0x44>
 4b2:	96 39       	cpi	r25, 0x96	; 150
 4b4:	b8 f4       	brcc	.+46     	; 0x4e4 <round+0x3c>
 4b6:	9e 38       	cpi	r25, 0x8E	; 142
 4b8:	48 f4       	brcc	.+18     	; 0x4cc <round+0x24>
 4ba:	67 2f       	mov	r22, r23
 4bc:	78 2f       	mov	r23, r24
 4be:	88 27       	eor	r24, r24
 4c0:	98 5f       	subi	r25, 0xF8	; 248
 4c2:	f9 cf       	rjmp	.-14     	; 0x4b6 <round+0xe>
 4c4:	86 95       	lsr	r24
 4c6:	77 95       	ror	r23
 4c8:	67 95       	ror	r22
 4ca:	93 95       	inc	r25
 4cc:	95 39       	cpi	r25, 0x95	; 149
 4ce:	d0 f3       	brcs	.-12     	; 0x4c4 <round+0x1c>
 4d0:	b6 2f       	mov	r27, r22
 4d2:	b1 70       	andi	r27, 0x01	; 1
 4d4:	6b 0f       	add	r22, r27
 4d6:	71 1d       	adc	r23, r1
 4d8:	81 1d       	adc	r24, r1
 4da:	20 f4       	brcc	.+8      	; 0x4e4 <round+0x3c>
 4dc:	87 95       	ror	r24
 4de:	77 95       	ror	r23
 4e0:	67 95       	ror	r22
 4e2:	93 95       	inc	r25
 4e4:	0c 94 78 02 	jmp	0x4f0	; 0x4f0 <__fp_mintl>
 4e8:	0c 94 93 02 	jmp	0x526	; 0x526 <__fp_mpack>
 4ec:	0c 94 4e 02 	jmp	0x49c	; 0x49c <__fp_szero>

000004f0 <__fp_mintl>:
 4f0:	88 23       	and	r24, r24
 4f2:	71 f4       	brne	.+28     	; 0x510 <__fp_mintl+0x20>
 4f4:	77 23       	and	r23, r23
 4f6:	21 f0       	breq	.+8      	; 0x500 <__fp_mintl+0x10>
 4f8:	98 50       	subi	r25, 0x08	; 8
 4fa:	87 2b       	or	r24, r23
 4fc:	76 2f       	mov	r23, r22
 4fe:	07 c0       	rjmp	.+14     	; 0x50e <__fp_mintl+0x1e>
 500:	66 23       	and	r22, r22
 502:	11 f4       	brne	.+4      	; 0x508 <__fp_mintl+0x18>
 504:	99 27       	eor	r25, r25
 506:	0d c0       	rjmp	.+26     	; 0x522 <__fp_mintl+0x32>
 508:	90 51       	subi	r25, 0x10	; 16
 50a:	86 2b       	or	r24, r22
 50c:	70 e0       	ldi	r23, 0x00	; 0
 50e:	60 e0       	ldi	r22, 0x00	; 0
 510:	2a f0       	brmi	.+10     	; 0x51c <__fp_mintl+0x2c>
 512:	9a 95       	dec	r25
 514:	66 0f       	add	r22, r22
 516:	77 1f       	adc	r23, r23
 518:	88 1f       	adc	r24, r24
 51a:	da f7       	brpl	.-10     	; 0x512 <__fp_mintl+0x22>
 51c:	88 0f       	add	r24, r24
 51e:	96 95       	lsr	r25
 520:	87 95       	ror	r24
 522:	97 f9       	bld	r25, 7
 524:	08 95       	ret

00000526 <__fp_mpack>:
 526:	9f 3f       	cpi	r25, 0xFF	; 255
 528:	31 f0       	breq	.+12     	; 0x536 <__fp_mpack_finite+0xc>

0000052a <__fp_mpack_finite>:
 52a:	91 50       	subi	r25, 0x01	; 1
 52c:	20 f4       	brcc	.+8      	; 0x536 <__fp_mpack_finite+0xc>
 52e:	87 95       	ror	r24
 530:	77 95       	ror	r23
 532:	67 95       	ror	r22
 534:	b7 95       	ror	r27
 536:	88 0f       	add	r24, r24
 538:	91 1d       	adc	r25, r1
 53a:	96 95       	lsr	r25
 53c:	87 95       	ror	r24
 53e:	97 f9       	bld	r25, 7
 540:	08 95       	ret

00000542 <__udivmodsi4>:
 542:	a1 e2       	ldi	r26, 0x21	; 33
 544:	1a 2e       	mov	r1, r26
 546:	aa 1b       	sub	r26, r26
 548:	bb 1b       	sub	r27, r27
 54a:	fd 01       	movw	r30, r26
 54c:	0d c0       	rjmp	.+26     	; 0x568 <__udivmodsi4_ep>

0000054e <__udivmodsi4_loop>:
 54e:	aa 1f       	adc	r26, r26
 550:	bb 1f       	adc	r27, r27
 552:	ee 1f       	adc	r30, r30
 554:	ff 1f       	adc	r31, r31
 556:	a2 17       	cp	r26, r18
 558:	b3 07       	cpc	r27, r19
 55a:	e4 07       	cpc	r30, r20
 55c:	f5 07       	cpc	r31, r21
 55e:	20 f0       	brcs	.+8      	; 0x568 <__udivmodsi4_ep>
 560:	a2 1b       	sub	r26, r18
 562:	b3 0b       	sbc	r27, r19
 564:	e4 0b       	sbc	r30, r20
 566:	f5 0b       	sbc	r31, r21

00000568 <__udivmodsi4_ep>:
 568:	66 1f       	adc	r22, r22
 56a:	77 1f       	adc	r23, r23
 56c:	88 1f       	adc	r24, r24
 56e:	99 1f       	adc	r25, r25
 570:	1a 94       	dec	r1
 572:	69 f7       	brne	.-38     	; 0x54e <__udivmodsi4_loop>
 574:	60 95       	com	r22
 576:	70 95       	com	r23
 578:	80 95       	com	r24
 57a:	90 95       	com	r25
 57c:	9b 01       	movw	r18, r22
 57e:	ac 01       	movw	r20, r24
 580:	bd 01       	movw	r22, r26
 582:	cf 01       	movw	r24, r30
 584:	08 95       	ret

00000586 <sprintf>:
 586:	ae e0       	ldi	r26, 0x0E	; 14
 588:	b0 e0       	ldi	r27, 0x00	; 0
 58a:	e9 ec       	ldi	r30, 0xC9	; 201
 58c:	f2 e0       	ldi	r31, 0x02	; 2
 58e:	0c 94 84 05 	jmp	0xb08	; 0xb08 <__prologue_saves__+0x1c>
 592:	0d 89       	ldd	r16, Y+21	; 0x15
 594:	1e 89       	ldd	r17, Y+22	; 0x16
 596:	86 e0       	ldi	r24, 0x06	; 6
 598:	8c 83       	std	Y+4, r24	; 0x04
 59a:	1a 83       	std	Y+2, r17	; 0x02
 59c:	09 83       	std	Y+1, r16	; 0x01
 59e:	8f ef       	ldi	r24, 0xFF	; 255
 5a0:	9f e7       	ldi	r25, 0x7F	; 127
 5a2:	9e 83       	std	Y+6, r25	; 0x06
 5a4:	8d 83       	std	Y+5, r24	; 0x05
 5a6:	ae 01       	movw	r20, r28
 5a8:	47 5e       	subi	r20, 0xE7	; 231
 5aa:	5f 4f       	sbci	r21, 0xFF	; 255
 5ac:	6f 89       	ldd	r22, Y+23	; 0x17
 5ae:	78 8d       	ldd	r23, Y+24	; 0x18
 5b0:	ce 01       	movw	r24, r28
 5b2:	01 96       	adiw	r24, 0x01	; 1
 5b4:	0e 94 e5 02 	call	0x5ca	; 0x5ca <vfprintf>
 5b8:	ef 81       	ldd	r30, Y+7	; 0x07
 5ba:	f8 85       	ldd	r31, Y+8	; 0x08
 5bc:	e0 0f       	add	r30, r16
 5be:	f1 1f       	adc	r31, r17
 5c0:	10 82       	st	Z, r1
 5c2:	2e 96       	adiw	r28, 0x0e	; 14
 5c4:	e4 e0       	ldi	r30, 0x04	; 4
 5c6:	0c 94 a0 05 	jmp	0xb40	; 0xb40 <__epilogue_restores__+0x1c>

000005ca <vfprintf>:
 5ca:	ab e0       	ldi	r26, 0x0B	; 11
 5cc:	b0 e0       	ldi	r27, 0x00	; 0
 5ce:	eb ee       	ldi	r30, 0xEB	; 235
 5d0:	f2 e0       	ldi	r31, 0x02	; 2
 5d2:	0c 94 76 05 	jmp	0xaec	; 0xaec <__prologue_saves__>
 5d6:	6c 01       	movw	r12, r24
 5d8:	7b 01       	movw	r14, r22
 5da:	8a 01       	movw	r16, r20
 5dc:	fc 01       	movw	r30, r24
 5de:	17 82       	std	Z+7, r1	; 0x07
 5e0:	16 82       	std	Z+6, r1	; 0x06
 5e2:	83 81       	ldd	r24, Z+3	; 0x03
 5e4:	81 ff       	sbrs	r24, 1
 5e6:	cc c1       	rjmp	.+920    	; 0x980 <__stack+0x81>
 5e8:	ce 01       	movw	r24, r28
 5ea:	01 96       	adiw	r24, 0x01	; 1
 5ec:	3c 01       	movw	r6, r24
 5ee:	f6 01       	movw	r30, r12
 5f0:	93 81       	ldd	r25, Z+3	; 0x03
 5f2:	f7 01       	movw	r30, r14
 5f4:	93 fd       	sbrc	r25, 3
 5f6:	85 91       	lpm	r24, Z+
 5f8:	93 ff       	sbrs	r25, 3
 5fa:	81 91       	ld	r24, Z+
 5fc:	7f 01       	movw	r14, r30
 5fe:	88 23       	and	r24, r24
 600:	09 f4       	brne	.+2      	; 0x604 <vfprintf+0x3a>
 602:	ba c1       	rjmp	.+884    	; 0x978 <__stack+0x79>
 604:	85 32       	cpi	r24, 0x25	; 37
 606:	39 f4       	brne	.+14     	; 0x616 <vfprintf+0x4c>
 608:	93 fd       	sbrc	r25, 3
 60a:	85 91       	lpm	r24, Z+
 60c:	93 ff       	sbrs	r25, 3
 60e:	81 91       	ld	r24, Z+
 610:	7f 01       	movw	r14, r30
 612:	85 32       	cpi	r24, 0x25	; 37
 614:	29 f4       	brne	.+10     	; 0x620 <vfprintf+0x56>
 616:	b6 01       	movw	r22, r12
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 61e:	e7 cf       	rjmp	.-50     	; 0x5ee <vfprintf+0x24>
 620:	91 2c       	mov	r9, r1
 622:	21 2c       	mov	r2, r1
 624:	31 2c       	mov	r3, r1
 626:	ff e1       	ldi	r31, 0x1F	; 31
 628:	f3 15       	cp	r31, r3
 62a:	d8 f0       	brcs	.+54     	; 0x662 <vfprintf+0x98>
 62c:	8b 32       	cpi	r24, 0x2B	; 43
 62e:	79 f0       	breq	.+30     	; 0x64e <vfprintf+0x84>
 630:	38 f4       	brcc	.+14     	; 0x640 <vfprintf+0x76>
 632:	80 32       	cpi	r24, 0x20	; 32
 634:	79 f0       	breq	.+30     	; 0x654 <vfprintf+0x8a>
 636:	83 32       	cpi	r24, 0x23	; 35
 638:	a1 f4       	brne	.+40     	; 0x662 <vfprintf+0x98>
 63a:	23 2d       	mov	r18, r3
 63c:	20 61       	ori	r18, 0x10	; 16
 63e:	1d c0       	rjmp	.+58     	; 0x67a <vfprintf+0xb0>
 640:	8d 32       	cpi	r24, 0x2D	; 45
 642:	61 f0       	breq	.+24     	; 0x65c <vfprintf+0x92>
 644:	80 33       	cpi	r24, 0x30	; 48
 646:	69 f4       	brne	.+26     	; 0x662 <vfprintf+0x98>
 648:	23 2d       	mov	r18, r3
 64a:	21 60       	ori	r18, 0x01	; 1
 64c:	16 c0       	rjmp	.+44     	; 0x67a <vfprintf+0xb0>
 64e:	83 2d       	mov	r24, r3
 650:	82 60       	ori	r24, 0x02	; 2
 652:	38 2e       	mov	r3, r24
 654:	e3 2d       	mov	r30, r3
 656:	e4 60       	ori	r30, 0x04	; 4
 658:	3e 2e       	mov	r3, r30
 65a:	2a c0       	rjmp	.+84     	; 0x6b0 <vfprintf+0xe6>
 65c:	f3 2d       	mov	r31, r3
 65e:	f8 60       	ori	r31, 0x08	; 8
 660:	1d c0       	rjmp	.+58     	; 0x69c <vfprintf+0xd2>
 662:	37 fc       	sbrc	r3, 7
 664:	2d c0       	rjmp	.+90     	; 0x6c0 <vfprintf+0xf6>
 666:	20 ed       	ldi	r18, 0xD0	; 208
 668:	28 0f       	add	r18, r24
 66a:	2a 30       	cpi	r18, 0x0A	; 10
 66c:	40 f0       	brcs	.+16     	; 0x67e <vfprintf+0xb4>
 66e:	8e 32       	cpi	r24, 0x2E	; 46
 670:	b9 f4       	brne	.+46     	; 0x6a0 <vfprintf+0xd6>
 672:	36 fc       	sbrc	r3, 6
 674:	81 c1       	rjmp	.+770    	; 0x978 <__stack+0x79>
 676:	23 2d       	mov	r18, r3
 678:	20 64       	ori	r18, 0x40	; 64
 67a:	32 2e       	mov	r3, r18
 67c:	19 c0       	rjmp	.+50     	; 0x6b0 <vfprintf+0xe6>
 67e:	36 fe       	sbrs	r3, 6
 680:	06 c0       	rjmp	.+12     	; 0x68e <vfprintf+0xc4>
 682:	8a e0       	ldi	r24, 0x0A	; 10
 684:	98 9e       	mul	r9, r24
 686:	20 0d       	add	r18, r0
 688:	11 24       	eor	r1, r1
 68a:	92 2e       	mov	r9, r18
 68c:	11 c0       	rjmp	.+34     	; 0x6b0 <vfprintf+0xe6>
 68e:	ea e0       	ldi	r30, 0x0A	; 10
 690:	2e 9e       	mul	r2, r30
 692:	20 0d       	add	r18, r0
 694:	11 24       	eor	r1, r1
 696:	22 2e       	mov	r2, r18
 698:	f3 2d       	mov	r31, r3
 69a:	f0 62       	ori	r31, 0x20	; 32
 69c:	3f 2e       	mov	r3, r31
 69e:	08 c0       	rjmp	.+16     	; 0x6b0 <vfprintf+0xe6>
 6a0:	8c 36       	cpi	r24, 0x6C	; 108
 6a2:	21 f4       	brne	.+8      	; 0x6ac <vfprintf+0xe2>
 6a4:	83 2d       	mov	r24, r3
 6a6:	80 68       	ori	r24, 0x80	; 128
 6a8:	38 2e       	mov	r3, r24
 6aa:	02 c0       	rjmp	.+4      	; 0x6b0 <vfprintf+0xe6>
 6ac:	88 36       	cpi	r24, 0x68	; 104
 6ae:	41 f4       	brne	.+16     	; 0x6c0 <vfprintf+0xf6>
 6b0:	f7 01       	movw	r30, r14
 6b2:	93 fd       	sbrc	r25, 3
 6b4:	85 91       	lpm	r24, Z+
 6b6:	93 ff       	sbrs	r25, 3
 6b8:	81 91       	ld	r24, Z+
 6ba:	7f 01       	movw	r14, r30
 6bc:	81 11       	cpse	r24, r1
 6be:	b3 cf       	rjmp	.-154    	; 0x626 <vfprintf+0x5c>
 6c0:	98 2f       	mov	r25, r24
 6c2:	9f 7d       	andi	r25, 0xDF	; 223
 6c4:	95 54       	subi	r25, 0x45	; 69
 6c6:	93 30       	cpi	r25, 0x03	; 3
 6c8:	28 f4       	brcc	.+10     	; 0x6d4 <vfprintf+0x10a>
 6ca:	0c 5f       	subi	r16, 0xFC	; 252
 6cc:	1f 4f       	sbci	r17, 0xFF	; 255
 6ce:	9f e3       	ldi	r25, 0x3F	; 63
 6d0:	99 83       	std	Y+1, r25	; 0x01
 6d2:	0d c0       	rjmp	.+26     	; 0x6ee <vfprintf+0x124>
 6d4:	83 36       	cpi	r24, 0x63	; 99
 6d6:	31 f0       	breq	.+12     	; 0x6e4 <vfprintf+0x11a>
 6d8:	83 37       	cpi	r24, 0x73	; 115
 6da:	71 f0       	breq	.+28     	; 0x6f8 <vfprintf+0x12e>
 6dc:	83 35       	cpi	r24, 0x53	; 83
 6de:	09 f0       	breq	.+2      	; 0x6e2 <vfprintf+0x118>
 6e0:	59 c0       	rjmp	.+178    	; 0x794 <vfprintf+0x1ca>
 6e2:	21 c0       	rjmp	.+66     	; 0x726 <vfprintf+0x15c>
 6e4:	f8 01       	movw	r30, r16
 6e6:	80 81       	ld	r24, Z
 6e8:	89 83       	std	Y+1, r24	; 0x01
 6ea:	0e 5f       	subi	r16, 0xFE	; 254
 6ec:	1f 4f       	sbci	r17, 0xFF	; 255
 6ee:	88 24       	eor	r8, r8
 6f0:	83 94       	inc	r8
 6f2:	91 2c       	mov	r9, r1
 6f4:	53 01       	movw	r10, r6
 6f6:	13 c0       	rjmp	.+38     	; 0x71e <vfprintf+0x154>
 6f8:	28 01       	movw	r4, r16
 6fa:	f2 e0       	ldi	r31, 0x02	; 2
 6fc:	4f 0e       	add	r4, r31
 6fe:	51 1c       	adc	r5, r1
 700:	f8 01       	movw	r30, r16
 702:	a0 80       	ld	r10, Z
 704:	b1 80       	ldd	r11, Z+1	; 0x01
 706:	36 fe       	sbrs	r3, 6
 708:	03 c0       	rjmp	.+6      	; 0x710 <vfprintf+0x146>
 70a:	69 2d       	mov	r22, r9
 70c:	70 e0       	ldi	r23, 0x00	; 0
 70e:	02 c0       	rjmp	.+4      	; 0x714 <vfprintf+0x14a>
 710:	6f ef       	ldi	r22, 0xFF	; 255
 712:	7f ef       	ldi	r23, 0xFF	; 255
 714:	c5 01       	movw	r24, r10
 716:	0e 94 d1 04 	call	0x9a2	; 0x9a2 <strnlen>
 71a:	4c 01       	movw	r8, r24
 71c:	82 01       	movw	r16, r4
 71e:	f3 2d       	mov	r31, r3
 720:	ff 77       	andi	r31, 0x7F	; 127
 722:	3f 2e       	mov	r3, r31
 724:	16 c0       	rjmp	.+44     	; 0x752 <vfprintf+0x188>
 726:	28 01       	movw	r4, r16
 728:	22 e0       	ldi	r18, 0x02	; 2
 72a:	42 0e       	add	r4, r18
 72c:	51 1c       	adc	r5, r1
 72e:	f8 01       	movw	r30, r16
 730:	a0 80       	ld	r10, Z
 732:	b1 80       	ldd	r11, Z+1	; 0x01
 734:	36 fe       	sbrs	r3, 6
 736:	03 c0       	rjmp	.+6      	; 0x73e <vfprintf+0x174>
 738:	69 2d       	mov	r22, r9
 73a:	70 e0       	ldi	r23, 0x00	; 0
 73c:	02 c0       	rjmp	.+4      	; 0x742 <vfprintf+0x178>
 73e:	6f ef       	ldi	r22, 0xFF	; 255
 740:	7f ef       	ldi	r23, 0xFF	; 255
 742:	c5 01       	movw	r24, r10
 744:	0e 94 c6 04 	call	0x98c	; 0x98c <strnlen_P>
 748:	4c 01       	movw	r8, r24
 74a:	f3 2d       	mov	r31, r3
 74c:	f0 68       	ori	r31, 0x80	; 128
 74e:	3f 2e       	mov	r3, r31
 750:	82 01       	movw	r16, r4
 752:	33 fc       	sbrc	r3, 3
 754:	1b c0       	rjmp	.+54     	; 0x78c <vfprintf+0x1c2>
 756:	82 2d       	mov	r24, r2
 758:	90 e0       	ldi	r25, 0x00	; 0
 75a:	88 16       	cp	r8, r24
 75c:	99 06       	cpc	r9, r25
 75e:	b0 f4       	brcc	.+44     	; 0x78c <vfprintf+0x1c2>
 760:	b6 01       	movw	r22, r12
 762:	80 e2       	ldi	r24, 0x20	; 32
 764:	90 e0       	ldi	r25, 0x00	; 0
 766:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 76a:	2a 94       	dec	r2
 76c:	f4 cf       	rjmp	.-24     	; 0x756 <vfprintf+0x18c>
 76e:	f5 01       	movw	r30, r10
 770:	37 fc       	sbrc	r3, 7
 772:	85 91       	lpm	r24, Z+
 774:	37 fe       	sbrs	r3, 7
 776:	81 91       	ld	r24, Z+
 778:	5f 01       	movw	r10, r30
 77a:	b6 01       	movw	r22, r12
 77c:	90 e0       	ldi	r25, 0x00	; 0
 77e:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 782:	21 10       	cpse	r2, r1
 784:	2a 94       	dec	r2
 786:	21 e0       	ldi	r18, 0x01	; 1
 788:	82 1a       	sub	r8, r18
 78a:	91 08       	sbc	r9, r1
 78c:	81 14       	cp	r8, r1
 78e:	91 04       	cpc	r9, r1
 790:	71 f7       	brne	.-36     	; 0x76e <vfprintf+0x1a4>
 792:	e8 c0       	rjmp	.+464    	; 0x964 <__stack+0x65>
 794:	84 36       	cpi	r24, 0x64	; 100
 796:	11 f0       	breq	.+4      	; 0x79c <vfprintf+0x1d2>
 798:	89 36       	cpi	r24, 0x69	; 105
 79a:	41 f5       	brne	.+80     	; 0x7ec <vfprintf+0x222>
 79c:	f8 01       	movw	r30, r16
 79e:	37 fe       	sbrs	r3, 7
 7a0:	07 c0       	rjmp	.+14     	; 0x7b0 <vfprintf+0x1e6>
 7a2:	60 81       	ld	r22, Z
 7a4:	71 81       	ldd	r23, Z+1	; 0x01
 7a6:	82 81       	ldd	r24, Z+2	; 0x02
 7a8:	93 81       	ldd	r25, Z+3	; 0x03
 7aa:	0c 5f       	subi	r16, 0xFC	; 252
 7ac:	1f 4f       	sbci	r17, 0xFF	; 255
 7ae:	08 c0       	rjmp	.+16     	; 0x7c0 <vfprintf+0x1f6>
 7b0:	60 81       	ld	r22, Z
 7b2:	71 81       	ldd	r23, Z+1	; 0x01
 7b4:	07 2e       	mov	r0, r23
 7b6:	00 0c       	add	r0, r0
 7b8:	88 0b       	sbc	r24, r24
 7ba:	99 0b       	sbc	r25, r25
 7bc:	0e 5f       	subi	r16, 0xFE	; 254
 7be:	1f 4f       	sbci	r17, 0xFF	; 255
 7c0:	f3 2d       	mov	r31, r3
 7c2:	ff 76       	andi	r31, 0x6F	; 111
 7c4:	3f 2e       	mov	r3, r31
 7c6:	97 ff       	sbrs	r25, 7
 7c8:	09 c0       	rjmp	.+18     	; 0x7dc <vfprintf+0x212>
 7ca:	90 95       	com	r25
 7cc:	80 95       	com	r24
 7ce:	70 95       	com	r23
 7d0:	61 95       	neg	r22
 7d2:	7f 4f       	sbci	r23, 0xFF	; 255
 7d4:	8f 4f       	sbci	r24, 0xFF	; 255
 7d6:	9f 4f       	sbci	r25, 0xFF	; 255
 7d8:	f0 68       	ori	r31, 0x80	; 128
 7da:	3f 2e       	mov	r3, r31
 7dc:	2a e0       	ldi	r18, 0x0A	; 10
 7de:	30 e0       	ldi	r19, 0x00	; 0
 7e0:	a3 01       	movw	r20, r6
 7e2:	0e 94 18 05 	call	0xa30	; 0xa30 <__ultoa_invert>
 7e6:	88 2e       	mov	r8, r24
 7e8:	86 18       	sub	r8, r6
 7ea:	45 c0       	rjmp	.+138    	; 0x876 <__DATA_REGION_LENGTH__+0x76>
 7ec:	85 37       	cpi	r24, 0x75	; 117
 7ee:	31 f4       	brne	.+12     	; 0x7fc <vfprintf+0x232>
 7f0:	23 2d       	mov	r18, r3
 7f2:	2f 7e       	andi	r18, 0xEF	; 239
 7f4:	b2 2e       	mov	r11, r18
 7f6:	2a e0       	ldi	r18, 0x0A	; 10
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	25 c0       	rjmp	.+74     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 7fc:	93 2d       	mov	r25, r3
 7fe:	99 7f       	andi	r25, 0xF9	; 249
 800:	b9 2e       	mov	r11, r25
 802:	8f 36       	cpi	r24, 0x6F	; 111
 804:	c1 f0       	breq	.+48     	; 0x836 <__DATA_REGION_LENGTH__+0x36>
 806:	18 f4       	brcc	.+6      	; 0x80e <__DATA_REGION_LENGTH__+0xe>
 808:	88 35       	cpi	r24, 0x58	; 88
 80a:	79 f0       	breq	.+30     	; 0x82a <__DATA_REGION_LENGTH__+0x2a>
 80c:	b5 c0       	rjmp	.+362    	; 0x978 <__stack+0x79>
 80e:	80 37       	cpi	r24, 0x70	; 112
 810:	19 f0       	breq	.+6      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
 812:	88 37       	cpi	r24, 0x78	; 120
 814:	21 f0       	breq	.+8      	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
 816:	b0 c0       	rjmp	.+352    	; 0x978 <__stack+0x79>
 818:	e9 2f       	mov	r30, r25
 81a:	e0 61       	ori	r30, 0x10	; 16
 81c:	be 2e       	mov	r11, r30
 81e:	b4 fe       	sbrs	r11, 4
 820:	0d c0       	rjmp	.+26     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 822:	fb 2d       	mov	r31, r11
 824:	f4 60       	ori	r31, 0x04	; 4
 826:	bf 2e       	mov	r11, r31
 828:	09 c0       	rjmp	.+18     	; 0x83c <__DATA_REGION_LENGTH__+0x3c>
 82a:	34 fe       	sbrs	r3, 4
 82c:	0a c0       	rjmp	.+20     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 82e:	29 2f       	mov	r18, r25
 830:	26 60       	ori	r18, 0x06	; 6
 832:	b2 2e       	mov	r11, r18
 834:	06 c0       	rjmp	.+12     	; 0x842 <__DATA_REGION_LENGTH__+0x42>
 836:	28 e0       	ldi	r18, 0x08	; 8
 838:	30 e0       	ldi	r19, 0x00	; 0
 83a:	05 c0       	rjmp	.+10     	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 83c:	20 e1       	ldi	r18, 0x10	; 16
 83e:	30 e0       	ldi	r19, 0x00	; 0
 840:	02 c0       	rjmp	.+4      	; 0x846 <__DATA_REGION_LENGTH__+0x46>
 842:	20 e1       	ldi	r18, 0x10	; 16
 844:	32 e0       	ldi	r19, 0x02	; 2
 846:	f8 01       	movw	r30, r16
 848:	b7 fe       	sbrs	r11, 7
 84a:	07 c0       	rjmp	.+14     	; 0x85a <__DATA_REGION_LENGTH__+0x5a>
 84c:	60 81       	ld	r22, Z
 84e:	71 81       	ldd	r23, Z+1	; 0x01
 850:	82 81       	ldd	r24, Z+2	; 0x02
 852:	93 81       	ldd	r25, Z+3	; 0x03
 854:	0c 5f       	subi	r16, 0xFC	; 252
 856:	1f 4f       	sbci	r17, 0xFF	; 255
 858:	06 c0       	rjmp	.+12     	; 0x866 <__DATA_REGION_LENGTH__+0x66>
 85a:	60 81       	ld	r22, Z
 85c:	71 81       	ldd	r23, Z+1	; 0x01
 85e:	80 e0       	ldi	r24, 0x00	; 0
 860:	90 e0       	ldi	r25, 0x00	; 0
 862:	0e 5f       	subi	r16, 0xFE	; 254
 864:	1f 4f       	sbci	r17, 0xFF	; 255
 866:	a3 01       	movw	r20, r6
 868:	0e 94 18 05 	call	0xa30	; 0xa30 <__ultoa_invert>
 86c:	88 2e       	mov	r8, r24
 86e:	86 18       	sub	r8, r6
 870:	fb 2d       	mov	r31, r11
 872:	ff 77       	andi	r31, 0x7F	; 127
 874:	3f 2e       	mov	r3, r31
 876:	36 fe       	sbrs	r3, 6
 878:	0d c0       	rjmp	.+26     	; 0x894 <__DATA_REGION_LENGTH__+0x94>
 87a:	23 2d       	mov	r18, r3
 87c:	2e 7f       	andi	r18, 0xFE	; 254
 87e:	a2 2e       	mov	r10, r18
 880:	89 14       	cp	r8, r9
 882:	58 f4       	brcc	.+22     	; 0x89a <__DATA_REGION_LENGTH__+0x9a>
 884:	34 fe       	sbrs	r3, 4
 886:	0b c0       	rjmp	.+22     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 888:	32 fc       	sbrc	r3, 2
 88a:	09 c0       	rjmp	.+18     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 88c:	83 2d       	mov	r24, r3
 88e:	8e 7e       	andi	r24, 0xEE	; 238
 890:	a8 2e       	mov	r10, r24
 892:	05 c0       	rjmp	.+10     	; 0x89e <__DATA_REGION_LENGTH__+0x9e>
 894:	b8 2c       	mov	r11, r8
 896:	a3 2c       	mov	r10, r3
 898:	03 c0       	rjmp	.+6      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 89a:	b8 2c       	mov	r11, r8
 89c:	01 c0       	rjmp	.+2      	; 0x8a0 <__DATA_REGION_LENGTH__+0xa0>
 89e:	b9 2c       	mov	r11, r9
 8a0:	a4 fe       	sbrs	r10, 4
 8a2:	0f c0       	rjmp	.+30     	; 0x8c2 <__DATA_REGION_LENGTH__+0xc2>
 8a4:	fe 01       	movw	r30, r28
 8a6:	e8 0d       	add	r30, r8
 8a8:	f1 1d       	adc	r31, r1
 8aa:	80 81       	ld	r24, Z
 8ac:	80 33       	cpi	r24, 0x30	; 48
 8ae:	21 f4       	brne	.+8      	; 0x8b8 <__DATA_REGION_LENGTH__+0xb8>
 8b0:	9a 2d       	mov	r25, r10
 8b2:	99 7e       	andi	r25, 0xE9	; 233
 8b4:	a9 2e       	mov	r10, r25
 8b6:	09 c0       	rjmp	.+18     	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8b8:	a2 fe       	sbrs	r10, 2
 8ba:	06 c0       	rjmp	.+12     	; 0x8c8 <__DATA_REGION_LENGTH__+0xc8>
 8bc:	b3 94       	inc	r11
 8be:	b3 94       	inc	r11
 8c0:	04 c0       	rjmp	.+8      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c2:	8a 2d       	mov	r24, r10
 8c4:	86 78       	andi	r24, 0x86	; 134
 8c6:	09 f0       	breq	.+2      	; 0x8ca <__DATA_REGION_LENGTH__+0xca>
 8c8:	b3 94       	inc	r11
 8ca:	a3 fc       	sbrc	r10, 3
 8cc:	11 c0       	rjmp	.+34     	; 0x8f0 <__DATA_REGION_LENGTH__+0xf0>
 8ce:	a0 fe       	sbrs	r10, 0
 8d0:	06 c0       	rjmp	.+12     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8d2:	b2 14       	cp	r11, r2
 8d4:	88 f4       	brcc	.+34     	; 0x8f8 <__DATA_REGION_LENGTH__+0xf8>
 8d6:	28 0c       	add	r2, r8
 8d8:	92 2c       	mov	r9, r2
 8da:	9b 18       	sub	r9, r11
 8dc:	0e c0       	rjmp	.+28     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8de:	b2 14       	cp	r11, r2
 8e0:	60 f4       	brcc	.+24     	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8e2:	b6 01       	movw	r22, r12
 8e4:	80 e2       	ldi	r24, 0x20	; 32
 8e6:	90 e0       	ldi	r25, 0x00	; 0
 8e8:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 8ec:	b3 94       	inc	r11
 8ee:	f7 cf       	rjmp	.-18     	; 0x8de <__DATA_REGION_LENGTH__+0xde>
 8f0:	b2 14       	cp	r11, r2
 8f2:	18 f4       	brcc	.+6      	; 0x8fa <__DATA_REGION_LENGTH__+0xfa>
 8f4:	2b 18       	sub	r2, r11
 8f6:	02 c0       	rjmp	.+4      	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8f8:	98 2c       	mov	r9, r8
 8fa:	21 2c       	mov	r2, r1
 8fc:	a4 fe       	sbrs	r10, 4
 8fe:	10 c0       	rjmp	.+32     	; 0x920 <__stack+0x21>
 900:	b6 01       	movw	r22, r12
 902:	80 e3       	ldi	r24, 0x30	; 48
 904:	90 e0       	ldi	r25, 0x00	; 0
 906:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 90a:	a2 fe       	sbrs	r10, 2
 90c:	17 c0       	rjmp	.+46     	; 0x93c <__stack+0x3d>
 90e:	a1 fc       	sbrc	r10, 1
 910:	03 c0       	rjmp	.+6      	; 0x918 <__stack+0x19>
 912:	88 e7       	ldi	r24, 0x78	; 120
 914:	90 e0       	ldi	r25, 0x00	; 0
 916:	02 c0       	rjmp	.+4      	; 0x91c <__stack+0x1d>
 918:	88 e5       	ldi	r24, 0x58	; 88
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	b6 01       	movw	r22, r12
 91e:	0c c0       	rjmp	.+24     	; 0x938 <__stack+0x39>
 920:	8a 2d       	mov	r24, r10
 922:	86 78       	andi	r24, 0x86	; 134
 924:	59 f0       	breq	.+22     	; 0x93c <__stack+0x3d>
 926:	a1 fe       	sbrs	r10, 1
 928:	02 c0       	rjmp	.+4      	; 0x92e <__stack+0x2f>
 92a:	8b e2       	ldi	r24, 0x2B	; 43
 92c:	01 c0       	rjmp	.+2      	; 0x930 <__stack+0x31>
 92e:	80 e2       	ldi	r24, 0x20	; 32
 930:	a7 fc       	sbrc	r10, 7
 932:	8d e2       	ldi	r24, 0x2D	; 45
 934:	b6 01       	movw	r22, r12
 936:	90 e0       	ldi	r25, 0x00	; 0
 938:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 93c:	89 14       	cp	r8, r9
 93e:	38 f4       	brcc	.+14     	; 0x94e <__stack+0x4f>
 940:	b6 01       	movw	r22, r12
 942:	80 e3       	ldi	r24, 0x30	; 48
 944:	90 e0       	ldi	r25, 0x00	; 0
 946:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 94a:	9a 94       	dec	r9
 94c:	f7 cf       	rjmp	.-18     	; 0x93c <__stack+0x3d>
 94e:	8a 94       	dec	r8
 950:	f3 01       	movw	r30, r6
 952:	e8 0d       	add	r30, r8
 954:	f1 1d       	adc	r31, r1
 956:	80 81       	ld	r24, Z
 958:	b6 01       	movw	r22, r12
 95a:	90 e0       	ldi	r25, 0x00	; 0
 95c:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 960:	81 10       	cpse	r8, r1
 962:	f5 cf       	rjmp	.-22     	; 0x94e <__stack+0x4f>
 964:	22 20       	and	r2, r2
 966:	09 f4       	brne	.+2      	; 0x96a <__stack+0x6b>
 968:	42 ce       	rjmp	.-892    	; 0x5ee <vfprintf+0x24>
 96a:	b6 01       	movw	r22, r12
 96c:	80 e2       	ldi	r24, 0x20	; 32
 96e:	90 e0       	ldi	r25, 0x00	; 0
 970:	0e 94 dc 04 	call	0x9b8	; 0x9b8 <fputc>
 974:	2a 94       	dec	r2
 976:	f6 cf       	rjmp	.-20     	; 0x964 <__stack+0x65>
 978:	f6 01       	movw	r30, r12
 97a:	86 81       	ldd	r24, Z+6	; 0x06
 97c:	97 81       	ldd	r25, Z+7	; 0x07
 97e:	02 c0       	rjmp	.+4      	; 0x984 <__stack+0x85>
 980:	8f ef       	ldi	r24, 0xFF	; 255
 982:	9f ef       	ldi	r25, 0xFF	; 255
 984:	2b 96       	adiw	r28, 0x0b	; 11
 986:	e2 e1       	ldi	r30, 0x12	; 18
 988:	0c 94 92 05 	jmp	0xb24	; 0xb24 <__epilogue_restores__>

0000098c <strnlen_P>:
 98c:	fc 01       	movw	r30, r24
 98e:	05 90       	lpm	r0, Z+
 990:	61 50       	subi	r22, 0x01	; 1
 992:	70 40       	sbci	r23, 0x00	; 0
 994:	01 10       	cpse	r0, r1
 996:	d8 f7       	brcc	.-10     	; 0x98e <strnlen_P+0x2>
 998:	80 95       	com	r24
 99a:	90 95       	com	r25
 99c:	8e 0f       	add	r24, r30
 99e:	9f 1f       	adc	r25, r31
 9a0:	08 95       	ret

000009a2 <strnlen>:
 9a2:	fc 01       	movw	r30, r24
 9a4:	61 50       	subi	r22, 0x01	; 1
 9a6:	70 40       	sbci	r23, 0x00	; 0
 9a8:	01 90       	ld	r0, Z+
 9aa:	01 10       	cpse	r0, r1
 9ac:	d8 f7       	brcc	.-10     	; 0x9a4 <strnlen+0x2>
 9ae:	80 95       	com	r24
 9b0:	90 95       	com	r25
 9b2:	8e 0f       	add	r24, r30
 9b4:	9f 1f       	adc	r25, r31
 9b6:	08 95       	ret

000009b8 <fputc>:
 9b8:	0f 93       	push	r16
 9ba:	1f 93       	push	r17
 9bc:	cf 93       	push	r28
 9be:	df 93       	push	r29
 9c0:	fb 01       	movw	r30, r22
 9c2:	23 81       	ldd	r18, Z+3	; 0x03
 9c4:	21 fd       	sbrc	r18, 1
 9c6:	03 c0       	rjmp	.+6      	; 0x9ce <fputc+0x16>
 9c8:	8f ef       	ldi	r24, 0xFF	; 255
 9ca:	9f ef       	ldi	r25, 0xFF	; 255
 9cc:	2c c0       	rjmp	.+88     	; 0xa26 <fputc+0x6e>
 9ce:	22 ff       	sbrs	r18, 2
 9d0:	16 c0       	rjmp	.+44     	; 0x9fe <fputc+0x46>
 9d2:	46 81       	ldd	r20, Z+6	; 0x06
 9d4:	57 81       	ldd	r21, Z+7	; 0x07
 9d6:	24 81       	ldd	r18, Z+4	; 0x04
 9d8:	35 81       	ldd	r19, Z+5	; 0x05
 9da:	42 17       	cp	r20, r18
 9dc:	53 07       	cpc	r21, r19
 9de:	44 f4       	brge	.+16     	; 0x9f0 <fputc+0x38>
 9e0:	a0 81       	ld	r26, Z
 9e2:	b1 81       	ldd	r27, Z+1	; 0x01
 9e4:	9d 01       	movw	r18, r26
 9e6:	2f 5f       	subi	r18, 0xFF	; 255
 9e8:	3f 4f       	sbci	r19, 0xFF	; 255
 9ea:	31 83       	std	Z+1, r19	; 0x01
 9ec:	20 83       	st	Z, r18
 9ee:	8c 93       	st	X, r24
 9f0:	26 81       	ldd	r18, Z+6	; 0x06
 9f2:	37 81       	ldd	r19, Z+7	; 0x07
 9f4:	2f 5f       	subi	r18, 0xFF	; 255
 9f6:	3f 4f       	sbci	r19, 0xFF	; 255
 9f8:	37 83       	std	Z+7, r19	; 0x07
 9fa:	26 83       	std	Z+6, r18	; 0x06
 9fc:	14 c0       	rjmp	.+40     	; 0xa26 <fputc+0x6e>
 9fe:	8b 01       	movw	r16, r22
 a00:	ec 01       	movw	r28, r24
 a02:	fb 01       	movw	r30, r22
 a04:	00 84       	ldd	r0, Z+8	; 0x08
 a06:	f1 85       	ldd	r31, Z+9	; 0x09
 a08:	e0 2d       	mov	r30, r0
 a0a:	09 95       	icall
 a0c:	89 2b       	or	r24, r25
 a0e:	e1 f6       	brne	.-72     	; 0x9c8 <fputc+0x10>
 a10:	d8 01       	movw	r26, r16
 a12:	16 96       	adiw	r26, 0x06	; 6
 a14:	8d 91       	ld	r24, X+
 a16:	9c 91       	ld	r25, X
 a18:	17 97       	sbiw	r26, 0x07	; 7
 a1a:	01 96       	adiw	r24, 0x01	; 1
 a1c:	17 96       	adiw	r26, 0x07	; 7
 a1e:	9c 93       	st	X, r25
 a20:	8e 93       	st	-X, r24
 a22:	16 97       	sbiw	r26, 0x06	; 6
 a24:	ce 01       	movw	r24, r28
 a26:	df 91       	pop	r29
 a28:	cf 91       	pop	r28
 a2a:	1f 91       	pop	r17
 a2c:	0f 91       	pop	r16
 a2e:	08 95       	ret

00000a30 <__ultoa_invert>:
 a30:	fa 01       	movw	r30, r20
 a32:	aa 27       	eor	r26, r26
 a34:	28 30       	cpi	r18, 0x08	; 8
 a36:	51 f1       	breq	.+84     	; 0xa8c <__ultoa_invert+0x5c>
 a38:	20 31       	cpi	r18, 0x10	; 16
 a3a:	81 f1       	breq	.+96     	; 0xa9c <__ultoa_invert+0x6c>
 a3c:	e8 94       	clt
 a3e:	6f 93       	push	r22
 a40:	6e 7f       	andi	r22, 0xFE	; 254
 a42:	6e 5f       	subi	r22, 0xFE	; 254
 a44:	7f 4f       	sbci	r23, 0xFF	; 255
 a46:	8f 4f       	sbci	r24, 0xFF	; 255
 a48:	9f 4f       	sbci	r25, 0xFF	; 255
 a4a:	af 4f       	sbci	r26, 0xFF	; 255
 a4c:	b1 e0       	ldi	r27, 0x01	; 1
 a4e:	3e d0       	rcall	.+124    	; 0xacc <__ultoa_invert+0x9c>
 a50:	b4 e0       	ldi	r27, 0x04	; 4
 a52:	3c d0       	rcall	.+120    	; 0xacc <__ultoa_invert+0x9c>
 a54:	67 0f       	add	r22, r23
 a56:	78 1f       	adc	r23, r24
 a58:	89 1f       	adc	r24, r25
 a5a:	9a 1f       	adc	r25, r26
 a5c:	a1 1d       	adc	r26, r1
 a5e:	68 0f       	add	r22, r24
 a60:	79 1f       	adc	r23, r25
 a62:	8a 1f       	adc	r24, r26
 a64:	91 1d       	adc	r25, r1
 a66:	a1 1d       	adc	r26, r1
 a68:	6a 0f       	add	r22, r26
 a6a:	71 1d       	adc	r23, r1
 a6c:	81 1d       	adc	r24, r1
 a6e:	91 1d       	adc	r25, r1
 a70:	a1 1d       	adc	r26, r1
 a72:	20 d0       	rcall	.+64     	; 0xab4 <__ultoa_invert+0x84>
 a74:	09 f4       	brne	.+2      	; 0xa78 <__ultoa_invert+0x48>
 a76:	68 94       	set
 a78:	3f 91       	pop	r19
 a7a:	2a e0       	ldi	r18, 0x0A	; 10
 a7c:	26 9f       	mul	r18, r22
 a7e:	11 24       	eor	r1, r1
 a80:	30 19       	sub	r19, r0
 a82:	30 5d       	subi	r19, 0xD0	; 208
 a84:	31 93       	st	Z+, r19
 a86:	de f6       	brtc	.-74     	; 0xa3e <__ultoa_invert+0xe>
 a88:	cf 01       	movw	r24, r30
 a8a:	08 95       	ret
 a8c:	46 2f       	mov	r20, r22
 a8e:	47 70       	andi	r20, 0x07	; 7
 a90:	40 5d       	subi	r20, 0xD0	; 208
 a92:	41 93       	st	Z+, r20
 a94:	b3 e0       	ldi	r27, 0x03	; 3
 a96:	0f d0       	rcall	.+30     	; 0xab6 <__ultoa_invert+0x86>
 a98:	c9 f7       	brne	.-14     	; 0xa8c <__ultoa_invert+0x5c>
 a9a:	f6 cf       	rjmp	.-20     	; 0xa88 <__ultoa_invert+0x58>
 a9c:	46 2f       	mov	r20, r22
 a9e:	4f 70       	andi	r20, 0x0F	; 15
 aa0:	40 5d       	subi	r20, 0xD0	; 208
 aa2:	4a 33       	cpi	r20, 0x3A	; 58
 aa4:	18 f0       	brcs	.+6      	; 0xaac <__ultoa_invert+0x7c>
 aa6:	49 5d       	subi	r20, 0xD9	; 217
 aa8:	31 fd       	sbrc	r19, 1
 aaa:	40 52       	subi	r20, 0x20	; 32
 aac:	41 93       	st	Z+, r20
 aae:	02 d0       	rcall	.+4      	; 0xab4 <__ultoa_invert+0x84>
 ab0:	a9 f7       	brne	.-22     	; 0xa9c <__ultoa_invert+0x6c>
 ab2:	ea cf       	rjmp	.-44     	; 0xa88 <__ultoa_invert+0x58>
 ab4:	b4 e0       	ldi	r27, 0x04	; 4
 ab6:	a6 95       	lsr	r26
 ab8:	97 95       	ror	r25
 aba:	87 95       	ror	r24
 abc:	77 95       	ror	r23
 abe:	67 95       	ror	r22
 ac0:	ba 95       	dec	r27
 ac2:	c9 f7       	brne	.-14     	; 0xab6 <__ultoa_invert+0x86>
 ac4:	00 97       	sbiw	r24, 0x00	; 0
 ac6:	61 05       	cpc	r22, r1
 ac8:	71 05       	cpc	r23, r1
 aca:	08 95       	ret
 acc:	9b 01       	movw	r18, r22
 ace:	ac 01       	movw	r20, r24
 ad0:	0a 2e       	mov	r0, r26
 ad2:	06 94       	lsr	r0
 ad4:	57 95       	ror	r21
 ad6:	47 95       	ror	r20
 ad8:	37 95       	ror	r19
 ada:	27 95       	ror	r18
 adc:	ba 95       	dec	r27
 ade:	c9 f7       	brne	.-14     	; 0xad2 <__ultoa_invert+0xa2>
 ae0:	62 0f       	add	r22, r18
 ae2:	73 1f       	adc	r23, r19
 ae4:	84 1f       	adc	r24, r20
 ae6:	95 1f       	adc	r25, r21
 ae8:	a0 1d       	adc	r26, r0
 aea:	08 95       	ret

00000aec <__prologue_saves__>:
 aec:	2f 92       	push	r2
 aee:	3f 92       	push	r3
 af0:	4f 92       	push	r4
 af2:	5f 92       	push	r5
 af4:	6f 92       	push	r6
 af6:	7f 92       	push	r7
 af8:	8f 92       	push	r8
 afa:	9f 92       	push	r9
 afc:	af 92       	push	r10
 afe:	bf 92       	push	r11
 b00:	cf 92       	push	r12
 b02:	df 92       	push	r13
 b04:	ef 92       	push	r14
 b06:	ff 92       	push	r15
 b08:	0f 93       	push	r16
 b0a:	1f 93       	push	r17
 b0c:	cf 93       	push	r28
 b0e:	df 93       	push	r29
 b10:	cd b7       	in	r28, 0x3d	; 61
 b12:	de b7       	in	r29, 0x3e	; 62
 b14:	ca 1b       	sub	r28, r26
 b16:	db 0b       	sbc	r29, r27
 b18:	0f b6       	in	r0, 0x3f	; 63
 b1a:	f8 94       	cli
 b1c:	de bf       	out	0x3e, r29	; 62
 b1e:	0f be       	out	0x3f, r0	; 63
 b20:	cd bf       	out	0x3d, r28	; 61
 b22:	09 94       	ijmp

00000b24 <__epilogue_restores__>:
 b24:	2a 88       	ldd	r2, Y+18	; 0x12
 b26:	39 88       	ldd	r3, Y+17	; 0x11
 b28:	48 88       	ldd	r4, Y+16	; 0x10
 b2a:	5f 84       	ldd	r5, Y+15	; 0x0f
 b2c:	6e 84       	ldd	r6, Y+14	; 0x0e
 b2e:	7d 84       	ldd	r7, Y+13	; 0x0d
 b30:	8c 84       	ldd	r8, Y+12	; 0x0c
 b32:	9b 84       	ldd	r9, Y+11	; 0x0b
 b34:	aa 84       	ldd	r10, Y+10	; 0x0a
 b36:	b9 84       	ldd	r11, Y+9	; 0x09
 b38:	c8 84       	ldd	r12, Y+8	; 0x08
 b3a:	df 80       	ldd	r13, Y+7	; 0x07
 b3c:	ee 80       	ldd	r14, Y+6	; 0x06
 b3e:	fd 80       	ldd	r15, Y+5	; 0x05
 b40:	0c 81       	ldd	r16, Y+4	; 0x04
 b42:	1b 81       	ldd	r17, Y+3	; 0x03
 b44:	aa 81       	ldd	r26, Y+2	; 0x02
 b46:	b9 81       	ldd	r27, Y+1	; 0x01
 b48:	ce 0f       	add	r28, r30
 b4a:	d1 1d       	adc	r29, r1
 b4c:	0f b6       	in	r0, 0x3f	; 63
 b4e:	f8 94       	cli
 b50:	de bf       	out	0x3e, r29	; 62
 b52:	0f be       	out	0x3f, r0	; 63
 b54:	cd bf       	out	0x3d, r28	; 61
 b56:	ed 01       	movw	r28, r26
 b58:	08 95       	ret

00000b5a <_exit>:
 b5a:	f8 94       	cli

00000b5c <__stop_program>:
 b5c:	ff cf       	rjmp	.-2      	; 0xb5c <__stop_program>
